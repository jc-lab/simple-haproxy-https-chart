apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "commonLabels" . | indent 4 }}
    app: haproxy
  name: "{{ .Release.Name }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{- include "commonLabels" . | indent 6 }}
      app: haproxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "commonLabels" . | indent 8 }}
        app: haproxy
    spec:
      shareProcessNamespace: true
      volumes:
        - name: config
          configMap:
            name: "{{ .Release.Name }}-config"
        - name: shared
          emptyDir: {}
        - name: front-tls
          secret:
            secretName: {{ include "getFrontTlsSecretName" . }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | indent 8 }}
        {{- end }}
      containers:
      - name: "haproxy"
        image: {{ include "image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
          - /opt/start-haproxy.sh
        ports:
          - name: https
            containerPort: 443
            protocol: TCP
        env:
          - name: "DUMMY"
            value: "dummy"
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | indent 10 }}
          {{- end }}
        volumeMounts:
          - name: config
            mountPath: "/opt/config"
          - name: shared
            mountPath: "/var/run/haproxy"
          {{- if .Values.extraVolumeMounts }}
          {{- toYaml .Values.extraVolumeMounts | indent 10 }}
          {{- end }}
        #livenessProbe:
        #  failureThreshold: 3
        #  initialDelaySeconds: 30
        #  periodSeconds: 5
        #  successThreshold: 1
        #  tcpSocket:
        #    port: 5000
        #  timeoutSeconds: 1
        #readinessProbe:
        #  failureThreshold: 3
        #  initialDelaySeconds: 3
        #  periodSeconds: 5
        #  successThreshold: 1
        #  tcpSocket:
        #    port: 5000
        #  timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - name: secret-watcher
        image: {{ include "image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
          - /opt/start-watch.sh
        volumeMounts:
          - name: shared
            mountPath: "/var/run/haproxy"
          - name: front-tls
            mountPath: /secret/frontend-tls
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

